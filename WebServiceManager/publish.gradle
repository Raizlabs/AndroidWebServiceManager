apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

version VERSION_NAME
group GROUP_NAME

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/WebServiceManager-release.aar")
            groupId GROUP_NAME
            artifactId ARTIFACT_NAME
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }

                project {
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    scm {
                        connection GIT_URL
                        developerConnection GIT_URL
                        url SITE_URL
                    }
                }
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('bintray.properties').newDataInputStream())

bintray {
    user = properties.getProperty('bintrayUser')
    key = properties.getProperty('bintrayApiKey')
    publications = ['Production']
    configurations = ['archives']
    override = true
    pkg {
        repo = REPO
        name = ARTIFACT_NAME
        userOrg = 'raizlabs'
        publish = true
        description = DESCRIPTION
        publicDownloadNumbers = true
        licenses = ['The Apache Software License, Version 2.0', 'http://www.apache.org/licenses/LICENSE-2.0.txt']
        vcsUrl = GIT_URL
        dryRun = true
        version {
            name = this.version
            desc = "WebServiceManager ${this.version}"
            released = new Date()
            vcsTag = this.version
        }
    }
}
